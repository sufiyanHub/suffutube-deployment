name: Deploy Pages & Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './src'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-and-deploy-k8s:
    runs-on: ubuntu-latest
    needs: deploy-pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t sufiyanhub/suffutube:latest ./src

      - name: Push Docker image
        run: docker push sufiyanhub/suffutube:latest

      - name: Set up kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          cat <<EOF | kubectl apply --validate=false -f -
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: suffutube-deployment
            labels:
              app: suffutube
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: suffutube
            template:
              metadata:
                labels:
                  app: suffutube
              spec:
                containers:
                  - name: suffutube-container
                    image: sufiyanhub/suffutube:latest
                    ports:
                      - containerPort: 80
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: suffutube-service
          spec:
            type: NodePort
            selector:
              app: suffutube
            ports:
              - port: 80
                targetPort: 80
                nodePort: 32080
          EOF
